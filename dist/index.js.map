{"version":3,"sources":["../index.js"],"names":["TAG","userCustomLogRule","isContentsTypeFilter","colors","Reset","Bright","Dim","Underscore","Blink","Reverse","Hidden","fg","Black","Red","Green","Yellow","Blue","Magenta","Cyan","White","Crimson","bg","defaultContentsTypeFilters","addContentsTypeFilter","filter","undefined","type","indexOf","push","i","length","getContentsTypeFilter","__Event","log","req","res","keys","Object","console","key","value","icon","Array","isArray","JSON","stringify","on","callback","$$TryResponse","name","func","call","arguments","$$Log","isJSON","currentTime","Date","now","statusMessage","statusCode","_headers","__responseBody","_processingTime","_requestTime","url","method","body","parse","_timeRequest","_timeResponse","Logger","next","contentType","toLowerCase","find","t","assign"],"mappings":"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","file":"index.js","sourcesContent":["const TAG = '[red-logger]';\nconst userCustomLogRule = [];\nexport let isContentsTypeFilter = true;\nconst colors = {\n\tReset: \"\\x1b[0m\",\n\tBright: \"\\x1b[1m\",\n\tDim: \"\\x1b[2m\",\n\tUnderscore: \"\\x1b[4m\",\n\tBlink: \"\\x1b[5m\",\n\tReverse: \"\\x1b[7m\",\n\tHidden: \"\\x1b[8m\",\n\tfg: {\n\t\tBlack: \"\\x1b[30m\",\n\t\tRed: \"\\x1b[31m\",\n\t\tGreen: \"\\x1b[32m\",\n\t\tYellow: \"\\x1b[33m\",\n\t\tBlue: \"\\x1b[34m\",\n\t\tMagenta: \"\\x1b[35m\",\n\t\tCyan: \"\\x1b[36m\",\n\t\tWhite: \"\\x1b[37m\",\n\t\tCrimson: \"\\x1b[38m\"\n\t},\n\tbg: {\n\t\tBlack: \"\\x1b[40m\",\n\t\tRed: \"\\x1b[41m\",\n\t\tGreen: \"\\x1b[42m\",\n\t\tYellow: \"\\x1b[43m\",\n\t\tBlue: \"\\x1b[44m\",\n\t\tMagenta: \"\\x1b[45m\",\n\t\tCyan: \"\\x1b[46m\",\n\t\tWhite: \"\\x1b[47m\",\n\t\tCrimson: \"\\x1b[48m\"\n\t}\n};\n\n\n/**\n * Header Contents-type list\n * @type {[string,string,string,string,string,string,string,string,string,string]}\n */\nconst defaultContentsTypeFilters = [\n\t'text/xml',\n\t'application/xml',\n\t'application/xml-external-parsed-entity',\n\t'application/xml-dtd',\n\t'application/mathtml+xml',\n\t'application/xslt+xml',\n\t'application/json',\n\t'text/html',\n\t'text/plain',\n\t'text/xml'\n];\n\n/**\n * Add Filter\n * @param filter\n * @returns {*}\n */\nexport const addContentsTypeFilter = (filter) => {\n\tif (filter === '' || filter === null || filter === undefined) {\n\t\treturn this;\n\t} else {\n\t\tconst type = typeof filter;\n\t\tif (type === 'string' && defaultContentsTypeFilters.indexOf(filter) <= -1) {\n\t\t\tdefaultContentsTypeFilters.push(filter);\n\t\t} else {\n\t\t\tfor (let i = 0; i < filter.length; i++) {\n\t\t\t\tdefaultContentsTypeFilters.push(filter.push(filter[i]));\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\n\n\n/**\n * get Filter\n * @returns {[string,string,string,string,string,string,string,string,string,string]}\n */\nexport const getContentsTypeFilter = () => {\n\treturn defaultContentsTypeFilters;\n};\n\nlet __Event = (log, req, res) => {\n\tconst keys = Object.keys(log);\n\tconsole.log(colors.bg.Cyan + colors.fg.White + '▼', `${TAG}` + colors.Reset);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\t\tconst value = log[key];\n\t\tconst type = typeof value;\n\t\tconst icon = i !== keys.length - 1 ? '├' : '┕';\n\t\tif (type === 'object') {\n\t\t\tconsole.log(colors.fg.Cyan + icon + colors.Bright + ` ${key}[${colors.Reset}${type}${colors.fg.Cyan}]${colors.Reset}:`, colors.Reset);\n\t\t\tconsole.log(colors.fg.Cyan + '│', '┕' + colors.Reset + ` ${Array.isArray(value) ? 'Array Length:' + value.length : 'Object keys :' + Object.keys(value).length}`);\n\t\t\tconsole.log(colors.fg.Cyan + '' + colors.Reset, '', '', JSON.stringify(value));\n\t\t} else {\n\t\t\tconsole.log(colors.fg.Cyan + icon + colors.Bright + ` ${key}[${colors.Reset}${type}${colors.fg.Cyan}]${colors.Reset}:`, value, colors.Reset);\n\t\t}\n\t}\n};\n\nexport const on = (callback) => {\n\t__Event = callback;\n};\n\n/**\n * Response 를 custom 해준다.\n * @param res\n * @param name\n * @param func\n * @returns {*}\n */\nconst $$TryResponse = (res, name, func) => {\n\tres[`__${name}`] = res[name];\n\tres[name] = function () {\n\t\tfunc.call(res, ...arguments);\n\t\treturn res[`__${name}`](...arguments);\n\t};\n\treturn res;\n};\n\nconst $$Log = (res, isJSON = false) => {\n\tconst currentTime = Date.now();\n\tconst {req, statusMessage, statusCode, _headers, __responseBody} = res;\n\tconst _processingTime = currentTime - req._requestTime;\n\tconst log = {\n\t\turl: req.url,\n\t\tmethod: req.method,\n\t\tstatusCode,\n\t\tstatusMessage,\n\t\tbody: isJSON ? JSON.parse(__responseBody) : __responseBody,\n\t\t_timeRequest: req._requestTime,\n\t\t_timeResponse: currentTime,\n\t\t_processingTime,\n\t};\n\treturn log;\n};\n\n\nconst Logger = (req, res, next) => {\n\treq._requestTime = Date.now();\n\t$$TryResponse(res, 'end', function () {\n\t\tthis.__responseBody = arguments[0];\n\t});\n\tres.on('finish', function () {\n\t\tlet contentType = this._headers['content-type'];\n\t\tif ((isContentsTypeFilter && contentType !== undefined && contentType !== null)) {\n\t\t\tcontentType = contentType.toLowerCase();\n\t\t\tconst type = defaultContentsTypeFilters.find(t => contentType.indexOf(t) >= 0);\n\t\t\tif (type !== null && type !== undefined) {\n\t\t\t\t__Event($$Log(res, type.indexOf('json') >= 0), res.req, res);\n\t\t\t}\n\t\t}\n\t});\n\tnext();\n};\n\nexport default Object.assign(Logger, {on});"]}